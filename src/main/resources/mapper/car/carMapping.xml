<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibo.parking.dao.car.CarMapper">

    <select id="getCars" resultType="Car">
        select
            a.id as id,
            a.cardId as cardId,
            a.model as model,
            a.color as color,
            a.carType as typeId,
            t.name as typeName,
            a.status as status,
            a.buy_time as buy_time,
            a.maintenance as maintenance
        from cars a
        left join type t on t.id = a.carType
        where 1 = 1
        <if test="typeId != null and typeId != ''">
            and carType = #{typeId}
        </if>
        <if test="logmin != null and logmin != '' and logmax != null and logmax != ''">
            and buy_time between #{logmin} and #{logmax}
        </if>
        <if test="cardId != null and cardId != ''">
            and cardId = #{cardId}
        </if>
    </select>

    <select id="getByStatus" resultType="Car">
        select
            a.id as id,
            a.cardId as cardId,
            a.model as model,
            a.color as color,
            a.carType as typeId,
            t.name as typeName,
            a.status as status,
            a.buy_time as buy_time,
            a.maintenance as maintenance
        from cars a
        left join type t on t.id = a.carType
        where a.status = 0
    </select>

    <select id="getAll" resultType="Car">
        select * from cars
    </select>

    <select id="get" resultType="Car">
        select * from cars where id = #{id}
    </select>

    <insert id="insert">
        insert into cars(
            id,
            cardId,
            model,
            color,
            carType,
            status,
            buy_time,
            maintenance
        )
        values (
            #{id},
            #{cardId},
            #{model},
            #{color},
            #{carType},
            #{status},
            #{buy_time},
            #{maintenance}
        )
    </insert>

    <update id="update">
        update cars set
            cardId = #{cardId},
            model = #{model},
            color = #{color},
            carType = #{carType},
            status = #{status},
            buy_time = #{buy_time},
            maintenance = #{maintenance}
        where id = #{id}
    </update>

    <update id="stop">
        update cars set
            status = '-1'
        where id = #{id}
    </update>

    <update id="start">
        update cars set
            status = '0'
        where id = #{id}
    </update>

    <delete id="del">
        delete from cars where id = #{id}
    </delete>
</mapper>