<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibo.parking.dao.user.UserMapper">

    <resultMap id="userMap" type="User">
        <id property="id" column="uid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="sex" column="sex"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="regist_time" column="regist_time"/>
        <result property="login_time" column="login_time"/>
        <result property="login_ip" column="login_ip"/>
        <collection property="roles" javaType="ArrayList" ofType="Role">
            <id column="rid" property="id"/>
            <result column="name" property="name"/>
            <result column="flag" property="flag"/>
            <result column="description" property="description"/>
        </collection>
    </resultMap>

    <select id="getAllUser" resultMap="userMap">
        select
            u.id as "uid",
            u.username,
            u.password,
            u.sex,
            u.phone,
            u.email,
            u.regist_time,
            u.login_time,
            u.login_ip,
            r.id as "rid",
            r.name,
            r.flag,
            r.description
        from `user` u
        left join user_role ur on ur.user_id = u.id
        left join role r on r.id = ur.role_id
    </select>

    <select id="get" resultMap="userMap">
        select
            u.id as "uid",
            u.username,
            u.password,
            u.sex,
            u.phone,
            u.email,
            u.regist_time,
            u.login_time,
            u.login_ip,
            r.id as "rid",
            r.name,
            r.flag,
            r.description
        from user u
        left join user_role ur on ur.user_id = u.id
        left join role r on r.id = ur.role_id
        where 1=1
        <if test="id != null and id != ''">
            and u.id = #{id}
        </if>
        <if test="id == null and id == ''">
            <if test="username != null and username != ''">
                and u.username = #{username}
            </if>
            <if test="password != null and password != ''">
                and u.password = #{password}
            </if>
        </if>
    </select>

    <select id="findByName" resultMap="userMap">
        select
            u.id as "uid",
            u.username,
            u.password,
            u.sex,
            u.phone,
            u.email,
            u.regist_time,
            u.login_time,
            u.login_ip,
            r.id as "rid",
            r.name,
            r.flag,
            r.description
        from `user` u
        left join user_role ur on ur.user_id = u.id
        left join role r on r.id = ur.role_id
        where 1=1
        <if test="username != null and username != ''">
            and u.username = #{username}
        </if>
    </select>

    <insert id="insert">
        insert into user (
            id,
            username,
            password,
            sex,
            phone,
            email,
            regist_time,
            login_time,
            login_ip
        )values(
            #{id},
            #{username},
            #{password},
            #{sex},
            #{phone},
            #{email},
            #{regist_time},
            #{login_time},
            #{login_ip}
        )
    </insert>

    <update id="update">
        update user set
            username = #{username},
            password = #{password},
            sex = #{sex},
            phone = #{phone},
            email = #{email}
        where id = #{id}
    </update>

    <update id="updatePWD">
        update user set
            password = #{password}
        where id = #{id}
    </update>

    <update id="loginUpdate">
        update user set
            login_time = #{login_time},
            login_ip = #{login_ip}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from user where id=#{id}
    </delete>
</mapper>